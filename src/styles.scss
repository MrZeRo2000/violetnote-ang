
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use '_theme-colors' as violetnote-theme; // location of generated file

html {
  @include mat.theme((
    color: (
      primary: violetnote-theme.$primary-palette,
      tertiary: violetnote-theme.$tertiary-palette,
    ),
    typography: Roboto,
    density: 0,
  ), $overrides: (
    background: #ffffff,
  ));

  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-background);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);
}/* You can add global styles to this file, and also import other style files */

html, body {
  height: 100%;
  font-size: 1.25rem;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.custom-snackbar-error .mat-mdc-snackbar-surface .mat-mdc-snack-bar-label {
  font-size: 1.25rem; // ~20px
  color: var(--mat-sys-error);
  padding: 0.75rem 0.75rem;
  max-width: 600px;
  border-radius: 8px;
}

.custom-snackbar-error .mat-mdc-snackbar-surface .mat-mdc-snack-bar-label {
  background-color: var(--mat-sys-error-container);
  color: var(--mat-sys-error);}

.custom-snackbar-error .mat-mdc-snackbar-surface{
  background-color: var(--mat-sys-error-container)!important;
}


